{
  "name": "ledgerconnect",
  "version": "1.1.0",
  "description": "Onboard users to web3 by allowing them to select a wallet, get that wallet ready to transact and have access to synced wallet state.",
  "keywords": [
    "ethereum",
    "web3",
    "blocknative",
    "wallet"
  ],
  "author": "Aaron Barnard <aaron@blocknative.com>",
  "license": "MIT",
  "devDependencies": {
    "@babel/cli": "^7.7.0",
    "@babel/core": "^7.5.5",
    "@babel/preset-env": "^7.5.5",
    "@pyoner/svelte-ts-preprocess": "^1.2.1",
    "@rollup/plugin-image": "^2.0.4",
    "@rollup/plugin-json": "^4.0.0",
    "@rollup/plugin-node-resolve": "^7.1.1",
    "@types/node": "^13.5.1",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "babel-plugin-external-helpers": "^6.18.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "lerna": "^3.20.2",
    "npm-run-all": "4.1.5",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.0",
    "rollup": "^1.27.5",
    "rollup-plugin-svelte": "^5.0.3",
    "rollup-plugin-typescript2": "0.21.0",
    "svelte": "^3.12.1",
    "svelte-i18n": "^1.1.2-beta",
    "typescript": "^3.9.7"
  },
  "dependencies": {
    "@ledgerhq/hw-app-eth": "^5.21.0",
    "@ledgerhq/hw-transport-u2f": "^5.21.0",
    "@portis/web3": "^2.0.0-beta.57",
    "@toruslabs/torus-embed": "^1.8.2",
    "@unilogin/provider": "^0.6.1",
    "@walletconnect/web3-provider": "^1.1.0",
    "authereum": "^0.0.4-beta.157",
    "bignumber.js": "^9.0.0",
    "bnc-sdk": "^2.1.4",
    "bowser": "^2.10.0",
    "eth-lattice-keyring": "^0.2.4",
    "ethereumjs-tx": "^2.1.2",
    "ethereumjs-util": "^7.0.3",
    "fortmatic": "^2.2.1",
    "hdkey": "^2.0.1",
    "regenerator-runtime": "^0.13.7",
    "squarelink": "^1.1.4",
    "trezor-connect": "^8.1.9",
    "walletlink": "^2.0.2",
    "web3-provider-engine": "^15.0.4"
  },
  "scripts": {
    "ls": "lerna ls",
    "bootstrap": "npm install && run-s bootstrap:monorepo bootstrap:example",
    "bootstrap:monorepo": "lerna bootstrap --hoist",
    "bootstrap:example": "cd example && npm install",
    "build": "lerna run build",
    "test": "lerna run test",
    "lint": "eslint -c './.eslintrc' --fix 'packages/*/*/**/*.ts'",
    "clean": "rm -rf dist && lerna run clean",
    "clean:node_modules": "lerna exec -- rm -rf node_modules",
    "clean:example": "cd example && rm -rf node_modules",
    "clean:all": "run-s clean clean:node_modules clean:example",
    "new-version": "lerna version --no-git-tag-version",
    "publish:latest": "lerna exec -- npm publish --access public",
    "publish:next": "lerna exec -- npm publish --access public --tag next",
    "move-dist": "node ./scripts/move-dist.js",
    "check": "run-s clean lint build test move-dist",
    "reset": "run-s clean:all bootstrap check",
    "start": "cd example && npm run start",
    "example": "run-s check start",
    "deploy": "run-s check publish",
    "pre-publish": "run-s new-version reset",
    "deploy:latest": "run-s pre-publish publish:latest",
    "deploy:next": "run-s pre-publish publish:next"
  }
}
